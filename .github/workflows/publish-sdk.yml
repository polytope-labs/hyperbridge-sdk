name: Publish SDK to npm and Create Release

on:
    push:
        tags:
            - "v*"

jobs:
    build-and-publish:
        runs-on: ubuntu-latest
        permissions:
            contents: write
            packages: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "22"
                  registry-url: "https://registry.npmjs.org"

            - name: Setup pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: "7"

            - name: Install dependencies
              run: pnpm install

            - name: Build SDK
              run: pnpm --filter="hyperbridge-sdk" build

            - name: Publish to npm
              run: |
                  echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
                  pnpm --filter="hyperbridge-sdk" publish --no-git-checks
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    create-release:
        needs: build-and-publish
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Get version from tag
              id: get_version
              run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

            - name: Get previous tag
              id: get_previous_tag
              run: |
                  PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${{ steps.get_version.outputs.VERSION }}^ 2>/dev/null || echo "")
                  echo "PREVIOUS_TAG=$PREVIOUS_TAG" >> $GITHUB_OUTPUT

            - name: Generate changelog
              id: changelog
              run: |
                  if [ -n "${{ steps.get_previous_tag.outputs.PREVIOUS_TAG }}" ]; then
                    echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
                    echo "## Changes since ${{ steps.get_previous_tag.outputs.PREVIOUS_TAG }}" >> $GITHUB_OUTPUT
                    git log --pretty=format:"* %s (%h)" ${{ steps.get_previous_tag.outputs.PREVIOUS_TAG }}..${{ steps.get_version.outputs.VERSION }} >> $GITHUB_OUTPUT
                    echo "EOF" >> $GITHUB_OUTPUT
                  else
                    echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
                    echo "## Initial Release" >> $GITHUB_OUTPUT
                    git log --pretty=format:"* %s (%h)" >> $GITHUB_OUTPUT
                    echo "EOF" >> $GITHUB_OUTPUT
                  fi

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ steps.get_version.outputs.VERSION }}
                  name: Release ${{ steps.get_version.outputs.VERSION }}
                  body: ${{ steps.changelog.outputs.CHANGELOG }}
                  draft: true
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
