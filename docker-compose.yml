services:

  subquery-node-hyperbridge-nexus:
    image: subquerynetwork/subql-node-substrate:latest
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_DATABASE: ${DB_DATABASE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}

    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-}
      - -f=/app/hyperbridge-nexus.yaml
      - --db-schema=app
      - --workers=${SUBQL_WORKERS:-5}
      - --batch-size=${SUBQL_BATCH_SIZE:-10}
      - --multi-chain
      - --unsafe
      - --log-level=info
      - --historical=false
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node-hyperbridge-nexus:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-cere-mainnet:
    image: subquerynetwork/subql-node-substrate:latest
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_DATABASE: ${DB_DATABASE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}

    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-}
      - -f=/app/cere-mainnet.yaml
      - --db-schema=app
      - --workers=${SUBQL_WORKERS:-5}
      - --batch-size=${SUBQL_BATCH_SIZE:-10}
      - --multi-chain
      - --unsafe
      - --log-level=info
      - --historical=false
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node-cere-mainnet:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-bifrost-mainnet:
    image: subquerynetwork/subql-node-substrate:latest
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_DATABASE: ${DB_DATABASE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}

    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-}
      - -f=/app/bifrost-mainnet.yaml
      - --db-schema=app
      - --workers=${SUBQL_WORKERS:-5}
      - --batch-size=${SUBQL_BATCH_SIZE:-10}
      - --multi-chain
      - --unsafe
      - --log-level=info
      - --historical=false
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node-bifrost-mainnet:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-bsc-mainnet:
    image: subquerynetwork/subql-node-ethereum:v5.4.0
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_DATABASE: ${DB_DATABASE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}

    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-}
      - -f=/app/bsc-mainnet.yaml
      - --db-schema=app
      - --workers=${SUBQL_WORKERS:-5}
      - --batch-size=${SUBQL_BATCH_SIZE:-10}
      - --multi-chain
      - --unsafe
      - --log-level=info
      - --historical=false
      - --block-confirmations=5 
      - --store-cache-async=false 
      - --store-cache-threshold=100
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node-bsc-mainnet:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-base-mainnet:
    image: subquerynetwork/subql-node-ethereum:v5.4.0
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_DATABASE: ${DB_DATABASE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}

    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-}
      - -f=/app/base-mainnet.yaml
      - --db-schema=app
      - --workers=${SUBQL_WORKERS:-5}
      - --batch-size=${SUBQL_BATCH_SIZE:-10}
      - --multi-chain
      - --unsafe
      - --log-level=info
      - --historical=false
      - --block-confirmations=5 
      - --store-cache-async=false 
      - --store-cache-threshold=100
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node-base-mainnet:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-ethereum-mainnet:
    image: subquerynetwork/subql-node-ethereum:v5.4.0
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_DATABASE: ${DB_DATABASE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}

    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-}
      - -f=/app/ethereum-mainnet.yaml
      - --db-schema=app
      - --workers=${SUBQL_WORKERS:-5}
      - --batch-size=${SUBQL_BATCH_SIZE:-10}
      - --multi-chain
      - --unsafe
      - --log-level=info
      - --historical=false
      - --block-confirmations=5 
      - --store-cache-async=false 
      - --store-cache-threshold=100
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node-ethereum-mainnet:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-arbitrum-mainnet:
    image: subquerynetwork/subql-node-ethereum:v5.4.0
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_DATABASE: ${DB_DATABASE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}

    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-}
      - -f=/app/arbitrum-mainnet.yaml
      - --db-schema=app
      - --workers=${SUBQL_WORKERS:-5}
      - --batch-size=${SUBQL_BATCH_SIZE:-10}
      - --multi-chain
      - --unsafe
      - --log-level=info
      - --historical=false
      - --block-confirmations=5 
      - --store-cache-async=false 
      - --store-cache-threshold=100
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node-arbitrum-mainnet:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-optimism-mainnet:
    image: subquerynetwork/subql-node-ethereum:v5.4.0
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_DATABASE: ${DB_DATABASE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}

    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-}
      - -f=/app/optimism-mainnet.yaml
      - --db-schema=app
      - --workers=${SUBQL_WORKERS:-5}
      - --batch-size=${SUBQL_BATCH_SIZE:-10}
      - --multi-chain
      - --unsafe
      - --log-level=info
      - --historical=false
      - --block-confirmations=5 
      - --store-cache-async=false 
      - --store-cache-threshold=100
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node-optimism-mainnet:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-gnosis-mainnet:
    image: subquerynetwork/subql-node-ethereum:v5.4.0
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_DATABASE: ${DB_DATABASE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}

    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-}
      - -f=/app/gnosis-mainnet.yaml
      - --db-schema=app
      - --workers=${SUBQL_WORKERS:-5}
      - --batch-size=${SUBQL_BATCH_SIZE:-10}
      - --multi-chain
      - --unsafe
      - --log-level=info
      - --historical=false
      - --block-confirmations=5 
      - --store-cache-async=false 
      - --store-cache-threshold=100
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node-gnosis-mainnet:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  subquery-node-soneium-mainnet:
    image: subquerynetwork/subql-node-ethereum:v5.4.0
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_DATABASE: ${DB_DATABASE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}

    volumes:
      - ./:/app
    command:
      - ${SUB_COMMAND:-}
      - -f=/app/soneium-mainnet.yaml
      - --db-schema=app
      - --workers=${SUBQL_WORKERS:-5}
      - --batch-size=${SUBQL_BATCH_SIZE:-10}
      - --multi-chain
      - --unsafe
      - --log-level=info
      - --historical=false
      - --block-confirmations=5 
      - --store-cache-async=false 
      - --store-cache-threshold=100
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://subquery-node-soneium-mainnet:3000/ready']
      interval: 3s
      timeout: 5s
      retries: 10

  graphql-engine:
    image: subquerynetwork/subql-query:v2.9.0
    ports:
      - 3000:3000

    restart: always
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_DATABASE: ${DB_DATABASE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    command:
      - --name=app
      - --playground

volumes:
  postgres_data: