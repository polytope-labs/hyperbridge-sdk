{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/commands/deployment/index.ts"],"names":[],"mappings":";AAAA,8DAA8D;AAC9D,mCAAmC;;;AAEnC,+CAAyC;AACzC,sCAA2C;AAC3C,8DAA8B;AAC9B,8DAA8B;AAC9B,gEAAgC;AAIhC,MAAqB,UAAW,SAAQ,cAAO;IAC7C,MAAM,CAAC,WAAW,GAAG,0BAA0B,CAAC;IAChD,MAAM,CAAC,KAAK,GAAG;QACb,OAAO,EAAE,YAAK,CAAC,MAAM,CAAC;YACpB,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC;SACzC,CAAC;QACF,GAAG,gBAAM,CAAC,KAAK;QACf,GAAG,iBAAO,CAAC,KAAK;QAChB,GAAG,gBAAM,CAAC,KAAK;KAChB,CAAC;IACF,MAAM,CAAC,aAAa,GAAG;QACrB,MAAM,EAAE,gBAAM;QACd,OAAO,EAAE,iBAAO;QAChB,MAAM,EAAE,gBAAM;KACf,CAAC;IAEF,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC7C,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC;QAC7B,IAAI,WAA6B,CAAC;QAElC,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,WAAW,GAAG,MAAM,IAAA,gBAAM,EAAC;gBACzB,OAAO,EAAE,4BAA4B;gBACrC,OAAO,EAAE,CAAC,EAAC,KAAK,EAAE,QAAQ,EAAC,EAAE,EAAC,KAAK,EAAE,SAAS,EAAC,EAAE,EAAC,KAAK,EAAE,QAAQ,EAAC,CAAC;aACpE,CAAC,CAAC;QACL,CAAC;aAAM,CAAC;YACN,WAAW,GAAG,MAA0B,CAAC;QAC3C,CAAC;QACD,IAAI,CAAC,GAAG,CAAC,+BAA+B,WAAW,EAAE,CAAC,CAAC;QACvD,IAAI,CAAC;YACH,MAAM,OAAO,GAAG,UAAU,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;YACtD,iFAAiF;YACjF,MAAM,aAAa,GAAa,OAAO,CAAC,IAAI;iBACzC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;iBACxF,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,EAAc,CAAC,CAAC;YAEpE,MAAM,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QACnC,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,IAAI,CAAC,GAAG,CAAC,8BAA8B,WAAW,WAAW,CAAC,EAAE,CAAC,CAAC;QACpE,CAAC;IACH,CAAC;;AAzCH,6BA0CC","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {select} from '@inquirer/prompts';\nimport {Command, Flags} from '@oclif/core';\nimport Delete from './delete';\nimport Deploy from './deploy';\nimport Promote from './promote';\n\ntype DeploymentOption = 'promote' | 'delete' | 'deploy';\n\nexport default class Deployment extends Command {\n  static description = 'Deploy to hosted service';\n  static flags = {\n    options: Flags.string({\n      options: ['deploy', 'promote', 'delete'],\n    }),\n    ...Deploy.flags,\n    ...Promote.flags,\n    ...Delete.flags,\n  };\n  static optionMapping = {\n    deploy: Deploy,\n    promote: Promote,\n    delete: Delete,\n  };\n\n  async run(): Promise<void> {\n    const {flags} = await this.parse(Deployment);\n    const option = flags.options;\n    let userOptions: DeploymentOption;\n\n    if (!option) {\n      userOptions = await select({\n        message: 'Select a deployment option',\n        choices: [{value: 'deploy'}, {value: 'promote'}, {value: 'delete'}],\n      });\n    } else {\n      userOptions = option as DeploymentOption;\n    }\n    this.log(`Selected deployment option: ${userOptions}`);\n    try {\n      const handler = Deployment.optionMapping[userOptions];\n      // removes arguments -> deployment and everything before it from the process.argv\n      const stripped_argv: string[] = process.argv\n        .filter((v, idx) => idx > process.argv.indexOf('deployment') && !v.includes('--options'))\n        .reduce((acc, val) => acc.concat(val.split('=')), [] as string[]);\n\n      await handler.run(stripped_argv);\n    } catch (e) {\n      this.log(`Failed to execute command: ${userOptions} error: ${e}`);\n    }\n  }\n}\n"]}