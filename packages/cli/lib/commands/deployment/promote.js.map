{"version":3,"file":"promote.js","sourceRoot":"","sources":["../../../src/commands/deployment/promote.ts"],"names":[],"mappings":";AAAA,8DAA8D;AAC9D,mCAAmC;;AAEnC,sCAA2C;AAC3C,+CAAkD;AAClD,0EAAqE;AACrE,uCAAsD;AAEtD,MAAqB,OAAQ,SAAQ,cAAO;IAC1C,MAAM,CAAC,WAAW,GAAG,oBAAoB,CAAC;IAE1C,MAAM,CAAC,KAAK,GAAG;QACb,GAAG,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,yBAAyB,EAAC,CAAC;QAC3D,YAAY,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,oBAAoB,EAAC,CAAC;QAC/D,YAAY,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,qBAAqB,EAAC,CAAC;KACjE,CAAC;IAEF,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,MAAM,SAAS,GAAG,MAAM,IAAA,kBAAU,GAAE,CAAC;QAErC,MAAM,YAAY,GAAW,CAAC,CAAC,MAAM,IAAA,qBAAa,EAChD,KAAK,CAAC,YAAY,EAClB,qBAAqB,EACrB,2BAA2B,CAC5B,CAAC,CAAC;QACH,MAAM,GAAG,GAAW,MAAM,IAAA,qBAAa,EAAC,KAAK,CAAC,GAAG,EAAE,oBAAoB,EAAE,0BAA0B,CAAC,CAAC;QACrG,MAAM,YAAY,GAAW,MAAM,IAAA,qBAAa,EAC9C,KAAK,CAAC,YAAY,EAClB,oBAAoB,EACpB,0BAA0B,CAC3B,CAAC;QAEF,MAAM,cAAc,GAAG,MAAM,IAAA,qCAAiB,EAC5C,GAAG,EACH,YAAY,EACZ,SAAS,EACT,CAAC,YAAY,EACb,6BAAiB,CAClB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,GAAG,CAAC,uBAAuB,cAAc,2BAA2B,CAAC,CAAC;IAC7E,CAAC;;AAjCH,0BAkCC","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {Command, Flags} from '@oclif/core';\nimport {ROOT_API_URL_PROD} from '../../constants';\nimport {promoteDeployment} from '../../controller/deploy-controller';\nimport {checkToken, valueOrPrompt} from '../../utils';\n\nexport default class Promote extends Command {\n  static description = 'Promote Deployment';\n\n  static flags = {\n    org: Flags.string({description: 'Enter organization name'}),\n    project_name: Flags.string({description: 'Enter project name'}),\n    deploymentID: Flags.string({description: 'Enter deployment ID'}),\n  };\n\n  async run(): Promise<void> {\n    const {flags} = await this.parse(Promote);\n    const authToken = await checkToken();\n\n    const deploymentID: number = +(await valueOrPrompt(\n      flags.deploymentID,\n      'Enter deployment ID',\n      'Deployment ID is required'\n    ));\n    const org: string = await valueOrPrompt(flags.org, 'Enter organisation', 'Organisation is required');\n    const project_name: string = await valueOrPrompt(\n      flags.project_name,\n      'Enter project name',\n      'Project name is required'\n    );\n\n    const promote_output = await promoteDeployment(\n      org,\n      project_name,\n      authToken,\n      +deploymentID,\n      ROOT_API_URL_PROD\n    ).catch((e) => this.error(e));\n    this.log(`Promote deployment: ${promote_output} from Stage to Production`);\n  }\n}\n"]}