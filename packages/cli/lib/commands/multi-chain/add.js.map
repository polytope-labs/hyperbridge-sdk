{"version":3,"file":"add.js","sourceRoot":"","sources":["../../../src/commands/multi-chain/add.ts"],"names":[],"mappings":";AAAA,8DAA8D;AAC9D,mCAAmC;;;AAEnC,4DAA4B;AAC5B,+CAAwC;AACxC,sCAA2C;AAC3C,gFAA+D;AAC/D,uCAAkD;AAElD,MAAqB,aAAc,SAAQ,cAAO;IAChD,MAAM,CAAC,WAAW,GAAG,qDAAqD,CAAC;IAE3E,MAAM,CAAC,KAAK,GAAG;QACb,UAAU,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,uCAAuC,EAAE,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,EAAC,CAAC;QACnH,iBAAiB,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,gCAAgC,EAAC,CAAC;KAC5F,CAAC;IAEF,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAEhD,MAAM,EAAC,UAAU,EAAC,GAAG,KAAK,CAAC;QAC3B,IAAI,EAAC,iBAAiB,EAAC,GAAG,KAAK,CAAC;QAEhC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACvB,iBAAiB,GAAG,MAAM,IAAA,eAAK,EAAC,EAAC,OAAO,EAAE,0CAA0C,EAAC,CAAC,CAAC;QACzF,CAAC;QACD,IAAA,gBAAM,EAAC,iBAAiB,EAAE,iCAAiC,CAAC,CAAC;QAE7D,MAAM,IAAA,+BAAQ,EAAC,UAAU,EAAE,IAAA,6BAAqB,EAAC,iBAAiB,CAAC,CAAC,CAAC;IACvE,CAAC;;AApBH,gCAqBC","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport assert from 'assert';\nimport {input} from '@inquirer/prompts';\nimport {Command, Flags} from '@oclif/core';\nimport {addChain} from '../../controller/add-chain-controller';\nimport {resolveToAbsolutePath} from '../../utils';\n\nexport default class MultiChainAdd extends Command {\n  static description = 'Add new chain manifest to multi-chain configuration';\n\n  static flags = {\n    multichain: Flags.string({char: 'f', description: 'specify multichain manifest file path', default: process.cwd()}),\n    chainManifestPath: Flags.string({char: 'c', description: 'path to the new chain manifest'}),\n  };\n\n  async run(): Promise<void> {\n    const {flags} = await this.parse(MultiChainAdd);\n\n    const {multichain} = flags;\n    let {chainManifestPath} = flags;\n\n    if (!chainManifestPath) {\n      chainManifestPath = await input({message: 'Enter the path to the new chain manifest'});\n    }\n    assert(chainManifestPath, 'Chain manifest path is required');\n\n    await addChain(multichain, resolveToAbsolutePath(chainManifestPath));\n  }\n}\n"]}