{"version":3,"file":"create-project.js","sourceRoot":"","sources":["../../../src/commands/project/create-project.ts"],"names":[],"mappings":";AAAA,8DAA8D;AAC9D,mCAAmC;;;AAEnC,4DAA4B;AAC5B,sCAA2C;AAC3C,+CAAoE;AACpE,4EAAkE;AAClE,uCAAsD;AAEtD,MAAqB,cAAe,SAAQ,cAAO;IACjD,MAAM,CAAC,WAAW,GAAG,kCAAkC,CAAC;IAExD,MAAM,CAAC,KAAK,GAAG;QACb,GAAG,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,yBAAyB,EAAC,CAAC;QAC3D,WAAW,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,oBAAoB,EAAC,CAAC;QAC9D,OAAO,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC;QACpF,QAAQ,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC;QACrF,WAAW,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,mBAAmB,EAAE,OAAO,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC;QAC3F,WAAW,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,0BAA0B,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC;QACrF,WAAW,EAAE,YAAK,CAAC,MAAM,CAAC;YACxB,WAAW,EAAE,wCAAwC;YACrD,OAAO,EAAE,UAAU;YACnB,QAAQ,EAAE,KAAK;SAChB,CAAC;KACH,CAAC;IAEF,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAEjD,IAAI,EAAC,GAAG,EAAE,WAAW,EAAC,GAAG,KAAK,CAAC;QAC/B,IAAA,gBAAM,EACJ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,EACxC,kGAAkG,CACnG,CAAC;QACF,MAAM,SAAS,GAAG,MAAM,IAAA,kBAAU,GAAE,CAAC;QAErC,GAAG,GAAG,MAAM,IAAA,qBAAa,EAAC,GAAG,EAAE,oBAAoB,EAAE,0BAA0B,CAAC,CAAC;QACjF,WAAW,GAAG,MAAM,IAAA,qBAAa,EAAC,WAAW,EAAE,oBAAoB,EAAE,0BAA0B,CAAC,CAAC;QAEjG,MAAM,MAAM,GAAG,MAAM,IAAA,kCAAa,EAAC,6BAAiB,EAAE,SAAS,EAAE;YAC/D,UAAU,EAAE,IAAI;YAChB,WAAW,EAAE,KAAK,CAAC,WAAW;YAC9B,GAAG,EAAE,GAAG,GAAG,IAAI,WAAW,EAAE;YAC5B,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,aAAa,EAAE,KAAK,CAAC,WAAW;YAChC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,KAAK,CAAC,WAAW,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/C,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAE/B,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC9C,IAAI,CAAC,GAAG,CAAC,iCAAiC,MAAM,CAAC,GAAG;qBACnC,4BAAgB,SAAS,OAAO,aAAa,IAAI,cAAc,CAAC,CAAC;IACpF,CAAC;;AA7CH,iCA8CC","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport assert from 'assert';\nimport {Command, Flags} from '@oclif/core';\nimport {BASE_PROJECT_URL, ROOT_API_URL_PROD} from '../../constants';\nimport {createProject} from '../../controller/project-controller';\nimport {checkToken, valueOrPrompt} from '../../utils';\n\nexport default class Create_project extends Command {\n  static description = 'Create Project on Hosted Service';\n\n  static flags = {\n    org: Flags.string({description: 'Enter organization name'}),\n    projectName: Flags.string({description: 'Enter project name'}),\n    logoURL: Flags.string({description: 'Enter logo URL', default: '', required: false}),\n    subtitle: Flags.string({description: 'Enter subtitle', default: '', required: false}),\n    description: Flags.string({description: 'Enter description', default: '', required: false}),\n    dedicatedDB: Flags.string({description: 'Enter dedicated DataBase', required: false}),\n    projectType: Flags.string({\n      description: 'Enter project type [subquery|subgraph]',\n      default: 'subquery',\n      required: false,\n    }),\n  };\n\n  async run(): Promise<void> {\n    const {flags} = await this.parse(Create_project);\n\n    let {org, projectName} = flags;\n    assert(\n      ['subquery'].includes(flags.projectType),\n      'Invalid project type, only \"subquery\" is supported. Please deploy Subgraphs through the website.'\n    );\n    const authToken = await checkToken();\n\n    org = await valueOrPrompt(org, 'Enter organisation', 'Organisation is required');\n    projectName = await valueOrPrompt(projectName, 'Enter project name', 'Project name is required');\n\n    const result = await createProject(ROOT_API_URL_PROD, authToken, {\n      apiVersion: 'v3',\n      description: flags.description,\n      key: `${org}/${projectName}`,\n      logoUrl: flags.logoURL,\n      name: projectName,\n      subtitle: flags.subtitle,\n      dedicateDBKey: flags.dedicatedDB,\n      tag: [],\n      type: flags.projectType === 'subquery' ? 1 : 3,\n    }).catch((e) => this.error(e));\n\n    const [account, name] = result.key.split('/');\n    this.log(`Successfully created project: ${result.key}\n    \\nProject Url: ${BASE_PROJECT_URL}/orgs/${account}/projects/${name}/deployments`);\n  }\n}\n"]}