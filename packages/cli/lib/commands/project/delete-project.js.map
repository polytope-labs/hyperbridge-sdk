{"version":3,"file":"delete-project.js","sourceRoot":"","sources":["../../../src/commands/project/delete-project.ts"],"names":[],"mappings":";AAAA,8DAA8D;AAC9D,mCAAmC;;AAEnC,sCAA2C;AAC3C,+CAAkD;AAClD,4EAAkE;AAClE,uCAAsD;AAEtD,MAAqB,cAAe,SAAQ,cAAO;IACjD,MAAM,CAAC,WAAW,GAAG,kCAAkC,CAAC;IAExD,MAAM,CAAC,KAAK,GAAG;QACb,GAAG,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,yBAAyB,EAAC,CAAC;QAC3D,WAAW,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,oBAAoB,EAAC,CAAC;KAC/D,CAAC;IAEF,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QACjD,MAAM,SAAS,GAAG,MAAM,IAAA,kBAAU,GAAE,CAAC;QACrC,IAAI,EAAC,GAAG,EAAE,WAAW,EAAC,GAAG,KAAK,CAAC;QAE/B,GAAG,GAAG,MAAM,IAAA,qBAAa,EAAC,GAAG,EAAE,oBAAoB,EAAE,0BAA0B,CAAC,CAAC;QACjF,WAAW,GAAG,MAAM,IAAA,qBAAa,EAAC,WAAW,EAAE,oBAAoB,EAAE,0BAA0B,CAAC,CAAC;QAEjG,MAAM,YAAY,GAAG,MAAM,IAAA,kCAAa,EAAC,SAAS,EAAE,GAAG,EAAE,WAAW,EAAE,6BAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CACnG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,CAAC;QACF,IAAI,CAAC,GAAG,CAAC,YAAY,YAAY,mBAAmB,CAAC,CAAC;IACxD,CAAC;;AApBH,iCAqBC","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {Command, Flags} from '@oclif/core';\nimport {ROOT_API_URL_PROD} from '../../constants';\nimport {deleteProject} from '../../controller/project-controller';\nimport {checkToken, valueOrPrompt} from '../../utils';\n\nexport default class Delete_project extends Command {\n  static description = 'Delete Project on Hosted Service';\n\n  static flags = {\n    org: Flags.string({description: 'Enter organization name'}),\n    projectName: Flags.string({description: 'Enter project name'}),\n  };\n\n  async run(): Promise<void> {\n    const {flags} = await this.parse(Delete_project);\n    const authToken = await checkToken();\n    let {org, projectName} = flags;\n\n    org = await valueOrPrompt(org, 'Enter organisation', 'Organisation is required');\n    projectName = await valueOrPrompt(projectName, 'Enter project name', 'Project name is required');\n\n    const deleteStatus = await deleteProject(authToken, org, projectName, ROOT_API_URL_PROD).catch((e) =>\n      this.error(e)\n    );\n    this.log(`Project: ${deleteStatus} has been deleted`);\n  }\n}\n"]}