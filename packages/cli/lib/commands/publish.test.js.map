{"version":3,"file":"publish.test.js","sourceRoot":"","sources":["../../src/commands/publish.test.ts"],"names":[],"mappings":";AAAA,8DAA8D;AAC9D,mCAAmC;;;AAEnC,oDAAoB;AACpB,wDAAwB;AACxB,mCAA8B;AAC9B,sEAA4D;AAC5D,gEAAgC;AAEhC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO;AACjC,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;IAC1C,IAAI,UAAkB,CAAC;IAEvB,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,UAAU,GAAG,MAAM,IAAA,0CAAiB,GAAE,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,KAAK,IAAI,EAAE;QAClB,IAAI,CAAC;YACH,IAAI,CAAC,UAAU;gBAAE,OAAO;YACxB,MAAM,IAAA,eAAM,EAAC,UAAU,CAAC,CAAC;QAC3B,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,OAAO,CAAC,IAAI,CAAC,uCAAuC,EAAE,CAAC,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QAClD,MAAM,OAAO,GAAG,sDAAsD,CAAC;QACvE,MAAM,WAAW,GAAG,cAAI,CAAC,OAAO,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QAC7D,MAAM,YAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QAClD,MAAM,iBAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;QAC5C,MAAM,QAAQ,GAAG,MAAM,YAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QACjE,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE,KAAK,IAAI,EAAE;QACtE,MAAM,iBAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;QACtC,MAAM,OAAO,GAAG,cAAI,CAAC,OAAO,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QACzD,MAAM,UAAU,GAAG,YAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAC1C,MAAM,WAAW,GAAG,MAAM,YAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAChE,MAAM,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,CAAC;QAClC,MAAM,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,gDAAgD;IAChD,EAAE,CAAC,6EAA6E,EAAE,KAAK,IAAI,EAAE;QAC3F,MAAM,YAAY,GAAG,cAAI,CAAC,OAAO,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QAC9D,MAAM,gBAAgB,GAAG,cAAI,CAAC,OAAO,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;QAC/D,YAAE,CAAC,UAAU,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;QAC9C,MAAM,iBAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC,CAAC;QAE5C,MAAM,OAAO,GAAG,cAAI,CAAC,OAAO,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;QACtD,MAAM,UAAU,GAAG,MAAM,YAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnD,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC;IAC3C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport fs from 'fs';\nimport path from 'path';\nimport {rimraf} from 'rimraf';\nimport {createTestProject} from '../createProject.fixtures';\nimport Publish from './publish';\n\njest.setTimeout(300_000); // 300s\ndescribe('Integration test - Publish', () => {\n  let projectDir: string;\n\n  beforeAll(async () => {\n    projectDir = await createTestProject();\n  });\n\n  afterAll(async () => {\n    try {\n      if (!projectDir) return;\n      await rimraf(projectDir);\n    } catch (e) {\n      console.warn('Failed to clean up tmp dir after test', e);\n    }\n  });\n\n  it('overwrites any exisiting CID files', async () => {\n    const initCID = 'QmWLxg7xV7ZWUyc7ZxZ8XuQQ7NmH8WQGXzg7VZ3QQNqF-testing';\n    const cidFilePath = path.resolve(projectDir, '.project-cid');\n    await fs.promises.writeFile(cidFilePath, initCID);\n    await Publish.run(['-f', projectDir, '-o']);\n    const cidValue = await fs.promises.readFile(cidFilePath, 'utf8');\n    expect(initCID).not.toEqual(cidValue);\n  });\n\n  it('create ipfsCID file stored in local with dictiory path', async () => {\n    await Publish.run(['-f', projectDir]);\n    const cidFile = path.resolve(projectDir, '.project-cid');\n    const fileExists = fs.existsSync(cidFile);\n    const IPFScontent = await fs.promises.readFile(cidFile, 'utf8');\n    expect(IPFScontent).toBeDefined();\n    expect(fileExists).toBeTruthy();\n  });\n\n  // Run this last because it modifies the project\n  it('file name consistent with manifest file name, if -f <manifest path> is used', async () => {\n    const manifestPath = path.resolve(projectDir, 'project.yaml');\n    const testManifestPath = path.resolve(projectDir, 'test.yaml');\n    fs.renameSync(manifestPath, testManifestPath);\n    await Publish.run(['-f', testManifestPath]);\n\n    const cidFile = path.resolve(projectDir, '.test-cid');\n    const fileExists = await fs.promises.stat(cidFile);\n    expect(fileExists.isFile()).toBeTruthy();\n  });\n});\n"]}