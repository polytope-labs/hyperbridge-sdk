{"version":3,"file":"add-chain-controller.spec.js","sourceRoot":"","sources":["../../src/controller/add-chain-controller.spec.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport fs, {existsSync} from 'fs';\nimport os from 'os';\nimport path from 'path';\nimport {DEFAULT_MULTICHAIN_MANIFEST} from '@subql/common';\nimport {MultichainProjectManifest, ProjectManifestV1_0_0} from '@subql/types-core';\nimport * as yaml from 'js-yaml';\nimport {rimraf} from 'rimraf';\nimport {YAMLSeq} from 'yaml';\nimport {loadMultichainManifest, validateAndAddChainManifest} from './add-chain-controller';\n\nconst multichainManifest: MultichainProjectManifest = {\n  specVersion: '1.0.0',\n  query: {\n    name: '@subql/query',\n    version: '*',\n  },\n  projects: ['./project-polkadot.yaml'],\n};\n\nconst childChainManifest_1: ProjectManifestV1_0_0 = {\n  specVersion: '1.0.0',\n  version: '1.0.0',\n  name: 'project-polkadot',\n  runner: {\n    node: {\n      name: '@subql/node',\n      version: '*',\n    },\n    query: {\n      name: '@subql/query',\n      version: '*',\n    },\n  },\n  network: {\n    chainId: '0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3',\n    endpoint: 'wss://polkadot.api.onfinality.io/public-ws',\n    dictionary: 'https://api.subquery.network/sq/subquery/polkadot-dictionary',\n  },\n  schema: {\n    file: './schema.graphql',\n  },\n  dataSources: [],\n};\n\nconst childChainManifest_2: ProjectManifestV1_0_0 = {\n  specVersion: '1.0.0',\n  version: '1.0.0',\n  name: 'project-kusama',\n  runner: {\n    node: {\n      name: '@subql/node',\n      version: '*',\n    },\n    query: {\n      name: '@subql/query',\n      version: '*',\n    },\n  },\n  network: {\n    chainId: '0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe',\n    endpoint: 'wss://kusama.api.onfinality.io/public-ws',\n    dictionary: 'https://api.subquery.network/sq/subquery/kusama-dictionary',\n  },\n  schema: {\n    file: './schema.graphql',\n  },\n  dataSources: [],\n};\n\nconst childChainManifest_2_wrongSchema: ProjectManifestV1_0_0 = {\n  specVersion: '1.0.0',\n  version: '1.0.0',\n  name: 'project-kusama',\n  runner: {\n    node: {\n      name: '@subql/node',\n      version: '*',\n    },\n    query: {\n      name: '@subql/query',\n      version: '*',\n    },\n  },\n  network: {\n    chainId: '0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe',\n    endpoint: 'wss://kusama.api.onfinality.io/public-ws',\n    dictionary: 'https://api.subquery.network/sq/subquery/kusama-dictionary',\n  },\n  schema: {\n    file: './schema_wrong.graphql',\n  },\n  dataSources: [],\n};\n\nasync function createMultichainProject(\n  multichainManifest: MultichainProjectManifest,\n  childManifests: ProjectManifestV1_0_0[]\n): Promise<string> {\n  const tmpdir = await fs.promises.mkdtemp(`${os.tmpdir()}${path.sep}`);\n  const projectDir = path.join(tmpdir, 'multichain');\n  await fs.promises.mkdir(projectDir);\n  // Create multichain manifest YAML\n  const multichainYaml = yaml.dump(multichainManifest);\n  if (!existsSync(projectDir)) {\n    throw new Error(`${projectDir} does not exist`);\n  }\n  await fs.promises.writeFile(path.join(projectDir, DEFAULT_MULTICHAIN_MANIFEST), multichainYaml);\n\n  // Create child manifest YAML files\n  const childManifestPromises = childManifests.map(async (childManifest) => {\n    const childManifestYaml = yaml.dump(childManifest);\n    const fileName = `${childManifest.name}.yaml`;\n    await fs.promises.writeFile(path.join(projectDir, fileName), childManifestYaml);\n    return fileName;\n  });\n\n  await Promise.all(childManifestPromises);\n\n  return projectDir;\n}\n\nasync function createChildManifestFile(childManifest: ProjectManifestV1_0_0, projectDir: string): Promise<string> {\n  const childManifestYaml = yaml.dump(childManifest);\n  const fileName = `${childManifest.name}.yaml`;\n  await fs.promises.writeFile(path.join(projectDir, fileName), childManifestYaml);\n  return path.join(projectDir, fileName);\n}\n\ndescribe('MultiChain - ADD', () => {\n  let projectDir: string;\n\n  afterEach(async () => {\n    try {\n      await rimraf(projectDir);\n    } catch (e) {\n      console.warn('Failed to clean up tmp dir after test', e);\n    }\n  });\n\n  it('can add chain to multichain manifest - valid schema paths', async () => {\n    projectDir = await createMultichainProject(multichainManifest, [childChainManifest_1]);\n    const chainFile = await createChildManifestFile(childChainManifest_2, projectDir);\n    const multichainManifestPath = path.join(projectDir, DEFAULT_MULTICHAIN_MANIFEST);\n    const multiManifest = loadMultichainManifest(multichainManifestPath);\n    validateAndAddChainManifest(projectDir, chainFile, multiManifest);\n    expect((multiManifest.get('projects') as YAMLSeq).get(1)).toEqual(`${childChainManifest_2.name}.yaml`);\n  });\n\n  it('cannot add chain to multichain manifest - invalid schema path', async () => {\n    projectDir = await createMultichainProject(multichainManifest, [childChainManifest_1]);\n    const chainFile = await createChildManifestFile(childChainManifest_2_wrongSchema, projectDir);\n    const multichainManifestPath = path.join(projectDir, DEFAULT_MULTICHAIN_MANIFEST);\n    const multiManifest = loadMultichainManifest(multichainManifestPath);\n    expect(() => validateAndAddChainManifest(projectDir, chainFile, multiManifest)).toThrow();\n  });\n});\n"]}