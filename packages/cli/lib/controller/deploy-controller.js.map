{"version":3,"file":"deploy-controller.js","sourceRoot":"","sources":["../../src/controller/deploy-controller.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport assert from 'assert';\nimport {Flags} from '@oclif/core';\nimport {FlagInput, OptionFlag} from '@oclif/core/lib/interfaces/parser';\nimport axios, {Axios} from 'axios';\nimport chalk from 'chalk';\nimport {BASE_PROJECT_URL, DEFAULT_DEPLOYMENT_TYPE, ROOT_API_URL_PROD} from '../constants';\nimport {\n  DeploymentDataType,\n  ProjectDataType,\n  QueryAdvancedOpts,\n  V3DeploymentIndexerType,\n  V3DeploymentInput,\n  ValidateDataType,\n  ProjectDeploymentInterface,\n  GenerateDeploymentChainInterface,\n  DeploymentFlagsInterface,\n  MultichainDataFieldType,\n  DeploymentType,\n} from '../types';\nimport {buildProjectKey, errorHandle} from '../utils';\n\nfunction getAxiosInstance(url: string, authToken?: string): Axios {\n  const headers: Record<string, string> = {};\n\n  if (authToken) {\n    headers.Authorization = `Bearer ${authToken}`;\n  }\n\n  return axios.create({\n    baseURL: url,\n    headers,\n  });\n}\n\nexport async function createDeployment(\n  org: string,\n  projectName: string,\n  authToken: string,\n  ipfsCID: string,\n  queryImageVersion: string,\n  type: DeploymentType,\n  query: QueryAdvancedOpts,\n  chains: V3DeploymentIndexerType[],\n  url: string\n): Promise<DeploymentDataType> {\n  try {\n    const res = await getAxiosInstance(url, authToken).post(\n      `v3/subqueries/${buildProjectKey(org, projectName)}/deployments`,\n      {\n        cid: ipfsCID,\n        type: type,\n        queryImageVersion: queryImageVersion,\n        queryAdvancedSettings: {query},\n        chains,\n      } satisfies V3DeploymentInput\n    );\n    return res.data.deployment;\n  } catch (e) {\n    throw errorHandle(e, 'Error deploying to hosted service:');\n  }\n}\n\nexport async function promoteDeployment(\n  org: string,\n  projectName: string,\n  authToken: string,\n  deploymentId: number,\n  url: string\n): Promise<string> {\n  try {\n    await getAxiosInstance(url, authToken).post(\n      `subqueries/${buildProjectKey(org, projectName)}/deployments/${deploymentId}/release`\n    );\n    return `${deploymentId}`;\n  } catch (e) {\n    throw errorHandle(e, 'Failed to promote project:');\n  }\n}\n\nexport async function deleteDeployment(\n  org: string,\n  projectName: string,\n  authToken: string,\n  deploymentId: number,\n  url: string\n): Promise<string> {\n  try {\n    await getAxiosInstance(url, authToken).delete(\n      `subqueries/${buildProjectKey(org, projectName)}/deployments/${deploymentId}`\n    );\n    return `${deploymentId}`;\n  } catch (e) {\n    throw errorHandle(e, 'Failed to delete deployment:');\n  }\n}\n\nexport async function deploymentStatus(\n  org: string,\n  projectName: string,\n  authToken: string,\n  deployID: number,\n  url: string\n): Promise<string> {\n  try {\n    const res = await getAxiosInstance(url, authToken).get<{status: string}>(\n      `subqueries/${buildProjectKey(org, projectName)}/deployments/${deployID}/status`\n    );\n    return `${res.data.status}`;\n  } catch (e) {\n    throw errorHandle(e, 'Failed to get deployment status:');\n  }\n}\n\nexport async function projectsInfo(\n  authToken: string,\n  org: string,\n  projectName: string,\n  url: string,\n  type: string\n): Promise<ProjectDataType | undefined> {\n  const key = `${org}/${projectName.toLowerCase()}`;\n  try {\n    const res = await getAxiosInstance(url, authToken).get<ProjectDataType[]>(\n      `v3/subqueries/${buildProjectKey(org, projectName)}/deployments`\n    );\n\n    return res.data.find((element) => element.projectKey === `${key}` && element.type === type);\n  } catch (e) {\n    throw errorHandle(e, 'Failed to get projects:');\n  }\n}\n\nexport async function updateDeployment(\n  org: string,\n  projectName: string,\n  deployID: number,\n  authToken: string,\n  ipfsCID: string,\n  queryVersion: string,\n  query: QueryAdvancedOpts,\n  chains: V3DeploymentIndexerType[],\n  url: string\n): Promise<void> {\n  try {\n    await getAxiosInstance(url, authToken).put(\n      `v3/subqueries/${buildProjectKey(org, projectName)}/deployments/${deployID}`,\n      {\n        cid: ipfsCID,\n        queryImageVersion: queryVersion,\n        queryAdvancedSettings: {query},\n        chains,\n      } as V3DeploymentInput\n    );\n  } catch (e) {\n    throw errorHandle(e, `Failed to redeploy project: ${(e as any).message}`);\n  }\n}\n\nexport async function ipfsCID_validate(\n  cid: string | undefined,\n  authToken: string,\n  url: string\n): Promise<ValidateDataType> {\n  assert(cid, 'IPFS CID is required');\n  try {\n    const res = await getAxiosInstance(url, authToken).post<ValidateDataType>(`ipfs/deployment-id/${cid}/validate`);\n\n    if (res.status === 500) {\n      throw new Error((res.data as unknown as {message: string}).message);\n    }\n\n    return res.data;\n  } catch (e) {\n    throw errorHandle(e, 'Failed to validate IPFS CID:');\n  }\n}\n\nexport async function imageVersions(name: string, version: string, authToken: string, url: string): Promise<string[]> {\n  try {\n    const res = await getAxiosInstance(url, authToken).get<string[]>(\n      `info/images/${encodeURIComponent(name)}?version=${encodeURIComponent(version)}`\n    );\n    return res.data;\n  } catch (e) {\n    throw errorHandle(e, 'Failed to get image:');\n  }\n}\n\nexport function splitEndpoints(endpointStr: string): string[] {\n  return endpointStr.split(',').map((e) => e.trim());\n}\n\nexport interface EndpointType {\n  network: string;\n  endpoint: string;\n  chainId: string;\n}\n\nexport function splitMultichainDataFields(fieldStr = ''): MultichainDataFieldType {\n  const result: MultichainDataFieldType = {};\n\n  splitEndpoints(String(fieldStr)).forEach((unparsedRow) => {\n    const regexpResult = unparsedRow.match(/(.*?):(.*)/);\n    if (regexpResult) {\n      const regexpRes = Object.values(regexpResult);\n      if (regexpRes && regexpRes.length === 6 && ['http', 'https', 'ws', 'wss'].indexOf(regexpRes[1]) === -1) {\n        result[regexpRes[1]] = regexpRes[2];\n      }\n    }\n  });\n\n  return result;\n}\n\nexport const DefaultDeployFlags = {\n  org: Flags.string({description: 'Enter organization name'}),\n  projectName: Flags.string({description: 'Enter project name'}),\n  // ipfsCID: Flags.string({description: 'Enter IPFS CID'}),\n\n  type: Flags.string({\n    options: ['stage', 'primary'],\n    default: DEFAULT_DEPLOYMENT_TYPE,\n    required: false,\n  }) as OptionFlag<DeploymentType>,\n  indexerVersion: Flags.string({description: 'Enter indexer-version', required: false}),\n  queryVersion: Flags.string({description: 'Enter query-version', required: false}),\n  dict: Flags.string({description: 'Enter dictionary', required: false}),\n  endpoint: Flags.string({description: 'Enter endpoint', required: false}),\n  //indexer set up flags\n  indexerUnsafe: Flags.boolean({description: 'Enable indexer unsafe', required: false}),\n  indexerBatchSize: Flags.integer({description: 'Enter batchSize from 1 to 30', required: false}),\n  indexerSubscription: Flags.boolean({description: 'Enable Indexer subscription', required: false}),\n  disableHistorical: Flags.boolean({description: 'Disable Historical Data', required: false}),\n  indexerUnfinalized: Flags.boolean({\n    description: 'Index unfinalized blocks (requires Historical to be enabled)',\n    required: false,\n  }),\n  indexerStoreCacheThreshold: Flags.integer({\n    description: 'The number of items kept in the cache before flushing',\n    required: false,\n  }),\n  disableIndexerStoreCacheAsync: Flags.boolean({\n    description: 'If enabled the store cache will flush data asynchronously relative to indexing data.',\n    required: false,\n  }),\n  indexerWorkers: Flags.integer({description: 'Enter worker threads from 1 to 5', required: false, max: 5}),\n\n  //query flags\n  queryUnsafe: Flags.boolean({description: 'Enable indexer unsafe', required: false}),\n  querySubscription: Flags.boolean({description: 'Enable Query subscription', required: false}),\n  queryTimeout: Flags.integer({description: 'Enter timeout from 1000ms to 60000ms', required: false}),\n  queryMaxConnection: Flags.integer({description: 'Enter MaxConnection from 1 to 10', required: false}),\n  queryAggregate: Flags.boolean({description: 'Enable Aggregate', required: false}),\n  queryLimit: Flags.integer({description: 'Set the max number of results the query service returns', required: false}),\n\n  useDefaults: Flags.boolean({\n    char: 'd',\n    description: 'Use default values for indexerVersion, queryVersion, dictionary, endpoint',\n    required: false,\n  }),\n} satisfies FlagInput<DeploymentFlagsInterface>;\n\nexport function generateDeploymentChain(row: GenerateDeploymentChainInterface): V3DeploymentIndexerType {\n  return {\n    cid: row.cid,\n    dictEndpoint: row.dictEndpoint,\n    endpoint: row.endpoint,\n    indexerImageVersion: row.indexerImageVersion,\n    indexerAdvancedSettings: {\n      indexer: {\n        unsafe: row.flags.indexerUnsafe,\n        batchSize: row.flags.indexerBatchSize,\n        subscription: row.flags.indexerSubscription,\n        historicalData: !row.flags.disableHistorical,\n        unfinalizedBlocks: row.flags.indexerUnfinalized,\n        storeCacheThreshold: row.flags.indexerStoreCacheThreshold,\n        disableStoreCacheAsync: row.flags.disableIndexerStoreCacheAsync,\n      },\n    },\n    extraParams: row.flags.indexerWorkers\n      ? {\n          workers: {\n            num: row.flags.indexerWorkers,\n          },\n        }\n      : {},\n  };\n}\n\nexport function generateAdvancedQueryOptions(flags: DeploymentFlagsInterface): QueryAdvancedOpts {\n  return {\n    unsafe: !!flags.queryUnsafe,\n    subscription: !!flags.querySubscription,\n    queryTimeout: Number(flags.queryTimeout),\n    queryLimit: flags.queryLimit ? Number(flags.queryLimit) : undefined,\n    // maxConnection: Number(flags.queryMaxConnection), // project version or plan does not support maxConnection\n    aggregate: !!flags.queryAggregate,\n  };\n}\n\nexport async function executeProjectDeployment(data: ProjectDeploymentInterface): Promise<DeploymentDataType | void> {\n  if (data.projectInfo !== undefined) {\n    await updateDeployment(\n      data.org,\n      data.projectName,\n      data.projectInfo.id,\n      data.authToken,\n      data.ipfsCID,\n      data.queryVersion,\n      generateAdvancedQueryOptions(data.flags),\n      data.chains,\n      ROOT_API_URL_PROD\n    );\n    data.log(`Project: ${data.projectName} has been re-deployed`);\n  } else {\n    const deploymentOutput = await createDeployment(\n      data.org,\n      data.projectName,\n      data.authToken,\n      data.ipfsCID,\n      data.queryVersion,\n      data.flags.type,\n      generateAdvancedQueryOptions(data.flags),\n      data.chains,\n      ROOT_API_URL_PROD\n    );\n\n    if (deploymentOutput) {\n      data.log(`Project: ${deploymentOutput.projectKey}\nStatus: ${chalk.blue(deploymentOutput.status)}\nDeploymentID: ${deploymentOutput.id}\nDeployment Type: ${deploymentOutput.type}\nIndexer version: ${deploymentOutput.indexerImage}\nQuery version: ${deploymentOutput.queryImage}\nEndpoint: ${deploymentOutput.endpoint}\nDictionary Endpoint: ${deploymentOutput.dictEndpoint}\nQuery URL: ${deploymentOutput.queryUrl}\nProject URL: ${BASE_PROJECT_URL}/org/${data.org}/project/${data.projectName}\nAdvanced Settings for Query: ${JSON.stringify(deploymentOutput.configuration.config.query)}\nAdvanced Settings for Indexer: ${JSON.stringify(deploymentOutput.configuration.config.indexer)}\n      `);\n    }\n    return deploymentOutput;\n  }\n}\n"]}