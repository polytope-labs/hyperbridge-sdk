{"version":3,"file":"deploy-controller.test.js","sourceRoot":"","sources":["../../src/controller/deploy-controller.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {ROOT_API_URL_PROD} from '../constants';\nimport {DeploymentDataType, DeploymentType, V3DeploymentIndexerType, ValidateDataType} from '../types';\nimport {delay} from '../utils';\nimport {\n  createDeployment,\n  promoteDeployment,\n  deleteDeployment,\n  deploymentStatus,\n  ipfsCID_validate,\n  imageVersions,\n  updateDeployment,\n  projectsInfo,\n} from './deploy-controller';\nimport {createProject, deleteProject, getProject} from './project-controller';\n\njest.setTimeout(120000);\n\nconst projectSpec = {\n  org: process.env.SUBQL_ORG_TEST!,\n  projectName: 'mockedStarter',\n  ipfs: 'Qmdr4yg98Fv8Yif3anjKVHhjuAKR665j6ekhWsfYUdkaCu',\n  subtitle: 'This project is generated by SubQuery SDK integration tests',\n  description: '',\n  logoURL: '',\n  type: 'stage',\n};\n\nasync function deployTestProject(\n  validator: ValidateDataType,\n  ipfs: string,\n  org: string,\n  project_name: string,\n  testAuth: string,\n  url: string\n): Promise<DeploymentDataType> {\n  const indexerV = await imageVersions(\n    validator.manifestRunner!.node.name,\n    validator.manifestRunner!.node.version,\n    testAuth,\n    url\n  );\n  const queryV = await imageVersions(\n    validator.manifestRunner!.query.name,\n    validator.manifestRunner!.query.version,\n    testAuth,\n    url\n  );\n\n  const endpoint = 'wss://polkadot.api.onfinality.io/public-ws';\n\n  const project: V3DeploymentIndexerType = {\n    cid: ipfs,\n    endpoint,\n    indexerImageVersion: indexerV[0],\n    indexerAdvancedSettings: {\n      indexer: {},\n    },\n  };\n\n  return createDeployment(\n    org,\n    project_name,\n    testAuth,\n    ipfs,\n    queryV[0],\n    projectSpec.type as DeploymentType,\n    {},\n    [project],\n    url\n  );\n}\n\n// Replace/Update your access token when test locally\nconst testAuth = process.env.SUBQL_ACCESS_TOKEN!;\n// Can be re-enabled when test env is ready\ndescribe('CLI deploy, delete, promote', () => {\n  beforeAll(async () => {\n    const {description, logoURL, org, projectName, subtitle} = projectSpec;\n    if (!projectSpec.org) {\n      throw new Error(`Please set SUBQL_ORG_TEST env var.`);\n    }\n\n    const project = await getProject(ROOT_API_URL_PROD, testAuth, `${org}/${projectName}`);\n    if (project) {\n      console.warn('Project already exists, these tests could be being run in parallel');\n      return;\n    }\n    await createProject(ROOT_API_URL_PROD, testAuth, {\n      apiVersion: 'v3',\n      key: `${org}/${projectName}`,\n      logoUrl: logoURL,\n      name: projectName,\n      description,\n      subtitle,\n      tag: [],\n      type: 1,\n    });\n  });\n\n  afterAll(async () => {\n    try {\n      await deleteProject(testAuth, projectSpec.org, projectSpec.projectName, ROOT_API_URL_PROD);\n    } catch (e) {\n      console.warn('Failed to delete project', e);\n    }\n  });\n\n  it('Deploy to Hosted Service and Delete', async () => {\n    const {ipfs, org, projectName} = projectSpec;\n\n    const validator = await ipfsCID_validate(ipfs, testAuth, ROOT_API_URL_PROD);\n    const deploy_output = await deployTestProject(validator, ipfs, org, projectName, testAuth, ROOT_API_URL_PROD);\n\n    const del_output = await deleteDeployment(org, projectName, testAuth, deploy_output.id, ROOT_API_URL_PROD);\n    expect(typeof deploy_output.id).toBe('number');\n    expect(+del_output).toBe(deploy_output.id);\n  });\n\n  // Only test locally\n  // eslint-disable-next-line jest/no-disabled-tests\n  it.skip('Promote Deployment', async () => {\n    const {ipfs, org, projectName} = projectSpec;\n    let status: string | undefined;\n    let attempt = 0;\n    const validator = await ipfsCID_validate(ipfs, testAuth, ROOT_API_URL_PROD);\n    const deployOutput = await deployTestProject(validator, ipfs, org, projectName, testAuth, ROOT_API_URL_PROD);\n    while (status !== 'running') {\n      if (attempt >= 5) break;\n      attempt = attempt + 1;\n      await delay(30);\n      status = await deploymentStatus(org, projectName, testAuth, deployOutput.id, ROOT_API_URL_PROD);\n      if (status === 'running') {\n        const promoteOutput = await promoteDeployment(org, projectName, testAuth, deployOutput.id, ROOT_API_URL_PROD);\n        // eslint-disable-next-line jest/no-conditional-expect\n        expect(+promoteOutput).toBe(deployOutput.id);\n      }\n    }\n  });\n\n  it('should return true for valid ipfsCID', async () => {\n    const validator = await ipfsCID_validate(projectSpec.ipfs, testAuth, ROOT_API_URL_PROD);\n    expect(validator.valid).toBe(true);\n  });\n\n  it('to throw error for invalid ipfsCID', async () => {\n    await expect(ipfsCID_validate('fake', testAuth, ROOT_API_URL_PROD)).rejects.toThrow(\n      'Failed to validate IPFS CID: fake is not a valid subquery deployment id!'\n    );\n  });\n\n  it('reDeploy to Hosted Service', async () => {\n    const {ipfs, org, projectName, type} = projectSpec;\n    const newIPFS = 'Qmdr4yg98Fv8Yif3anjKVHhjuAKR665j6ekhWsfYUdkaCu';\n    const validator = await ipfsCID_validate(projectSpec.ipfs, testAuth, ROOT_API_URL_PROD);\n\n    const deployOutput = await deployTestProject(validator, ipfs, org, projectName, testAuth, ROOT_API_URL_PROD);\n    const initProjectInfo = await projectsInfo(testAuth, org, projectName, ROOT_API_URL_PROD, type);\n\n    const endpoint = 'wss://polkadot.api.onfinality.io/public-ws';\n    const indexerV = await imageVersions(\n      validator.manifestRunner!.node.name,\n      validator.manifestRunner!.node.version,\n      testAuth,\n      ROOT_API_URL_PROD\n    );\n    const queryV = await imageVersions(\n      validator.manifestRunner!.query.name,\n      validator.manifestRunner!.query.version,\n      testAuth,\n      ROOT_API_URL_PROD\n    );\n\n    const project = {\n      cid: ipfs,\n      endpoint,\n      indexerImageVersion: indexerV[0],\n      indexerAdvancedSettings: {\n        indexer: {},\n      },\n    };\n\n    await updateDeployment(\n      org,\n      projectName,\n      deployOutput.id,\n      testAuth,\n      newIPFS,\n      queryV[0],\n      {},\n      [project],\n      ROOT_API_URL_PROD\n    );\n    const updatedInfo = await projectsInfo(testAuth, org, projectName, ROOT_API_URL_PROD, type);\n\n    expect(updatedInfo!.id).toBe(initProjectInfo!.id);\n    expect(updatedInfo!.version).not.toEqual(deployOutput.version);\n  });\n});\n"]}