{"version":3,"file":"ethereum.js","sourceRoot":"","sources":["../../../../src/controller/migrate/manifest/ethereum.ts"],"names":[],"mappings":";AAAA,8DAA8D;AAC9D,mCAAmC;;AAgEnC,8CAMC;AAED,0DAKC;AAnED,mEAAqE;AAKrE,SAAS,gBAAgB,CACvB,EAAyC;IAEzC,MAAM,MAAM,GAA+B,IAAI,GAAG,EAAE,CAAC;IACrD,KAAK,MAAM,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAClC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,EAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAC,CAAC,CAAC;IACzC,CAAC;IAED,MAAM,OAAO,GAAG;QACd,IAAI,EAAE,kBAAoD;QAC1D,qBAAqB,EAAE,gCAAgC;QACvD,MAAM,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC;QACrE,OAAO,EAAE;YACP,IAAI,EAAE,gDAA0B;YAChC,QAAQ,EAAE;gBACR,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;oBAC5C,OAAO;wBACL,IAAI,EAAE,kBAA+C;wBACrD,kBAAkB,EAAE,2BAA2B;wBAC/C,OAAO,EAAE,CAAC,CAAC,OAAO;wBAClB,MAAM,EAAE,SAAS;qBAClB,CAAC;gBACJ,CAAC,CAAC;gBACF,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;oBAC5C,OAAO;wBACL,IAAI,EAAE,qBAAkD;wBACxD,kBAAkB,EAAE,2BAA2B;wBAC/C,OAAO,EAAE,CAAC,CAAC,OAAO;wBAClB,MAAM,EAAE;4BACN,MAAM,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;yBAClB;qBACF,CAAC;gBACJ,CAAC,CAAC;gBACF,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;oBAC3C,OAAO;wBACL,IAAI,EAAE,6BAAyD;wBAC/D,kBAAkB,EAAE,0BAA0B;wBAC9C,OAAO,EAAE,CAAC,CAAC,OAAO;wBAClB,MAAM,EAAE;4BACN,CAAC,EAAE,CAAC,CAAC,QAAQ;yBACd;qBACF,CAAC;gBACJ,CAAC,CAAC;aACH;SACF;KACqC,CAAC;IACzC,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAgB,iBAAiB,CAAC,EAAsB;IACtD,MAAM,OAAO,GAAG,gBAAgB,CAAa,EAAE,CAAC,CAAC;IACjD,OAAO,CAAC,UAAU,GAAG,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC;IAC1C,OAAO,CAAC,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC;IACtC,OAAO,CAAC,OAAO,GAAG,EAAC,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,EAAC,CAAC;IACnE,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAgB,uBAAuB,CAAC,EAAoB;IAC1D,MAAM,aAAa,GAAG,gBAAgB,CAAc,EAAE,CAAC,CAAC;IACxD,aAAa,CAAC,OAAO,GAAG,EAAC,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,EAAC,CAAC;IAC7C,aAAa,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC;IAC7B,OAAO,aAAa,CAAC;AACvB,CAAC","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {FileReference} from '@subql/types-core';\nimport type {\n  SubqlRuntimeDatasource as EthereumDs,\n  CustomDatasourceTemplate as EthereumCustomDsTemplate,\n  RuntimeDatasourceTemplate as EthereumDsTemplate,\n  EthereumDatasourceKind,\n  EthereumHandlerKind,\n} from '@subql/types-ethereum';\nimport {DEFAULT_HANDLER_BUILD_PATH} from '../../generate-controller';\nimport {MigrateDatasourceKind, SubgraphDataSource, SubgraphTemplate} from '../types';\n\ntype EthTemplate = EthereumDsTemplate | EthereumCustomDsTemplate;\n\nfunction baseDsConversion<D extends EthereumDs | EthTemplate>(\n  ds: SubgraphDataSource | SubgraphTemplate\n): MigrateDatasourceKind<D> {\n  const assets: Map<string, FileReference> = new Map();\n  for (const abi of ds.mapping.abis) {\n    assets.set(abi.name, {file: abi.file});\n  }\n\n  const subqlDs = {\n    kind: 'ethereum/Runtime' as EthereumDatasourceKind.Runtime,\n    migrateDatasourceType: 'EthereumDatasourceKind.Runtime',\n    assets: new Map(ds.mapping.abis.map((a) => [a.name, {file: a.file}])),\n    mapping: {\n      file: DEFAULT_HANDLER_BUILD_PATH,\n      handlers: [\n        ...(ds.mapping.blockHandlers ?? []).map((h) => {\n          return {\n            kind: 'ethereum/Runtime' as EthereumHandlerKind.Block,\n            migrateHandlerType: 'EthereumHandlerKind.Block',\n            handler: h.handler,\n            filter: undefined,\n          };\n        }),\n        ...(ds.mapping.eventHandlers ?? []).map((h) => {\n          return {\n            kind: 'ethereum/LogHandler' as EthereumHandlerKind.Event,\n            migrateHandlerType: 'EthereumHandlerKind.Event',\n            handler: h.handler,\n            filter: {\n              topics: [h.event],\n            },\n          };\n        }),\n        ...(ds.mapping.callHandlers ?? []).map((h) => {\n          return {\n            kind: 'ethereum/TransactionHandler' as EthereumHandlerKind.Call,\n            migrateHandlerType: 'EthereumHandlerKind.Call',\n            handler: h.handler,\n            filter: {\n              f: h.function,\n            },\n          };\n        }),\n      ],\n    },\n  } as unknown as MigrateDatasourceKind<D>;\n  return subqlDs;\n}\n\nexport function convertEthereumDs(ds: SubgraphDataSource): MigrateDatasourceKind<EthereumDs> {\n  const subqlDs = baseDsConversion<EthereumDs>(ds);\n  subqlDs.startBlock = ds.source.startBlock;\n  subqlDs.endBlock = ds.source.endBlock;\n  subqlDs.options = {abi: ds.source.abi, address: ds.source.address};\n  return subqlDs;\n}\n\nexport function convertEthereumTemplate(ds: SubgraphTemplate): MigrateDatasourceKind<EthTemplate> {\n  const subqlTemplate = baseDsConversion<EthTemplate>(ds);\n  subqlTemplate.options = {abi: ds.source.abi};\n  subqlTemplate.name = ds.name;\n  return subqlTemplate;\n}\n"]}