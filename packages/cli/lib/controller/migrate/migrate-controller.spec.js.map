{"version":3,"file":"migrate-controller.spec.js","sourceRoot":"","sources":["../../../src/controller/migrate/migrate-controller.spec.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport fs from 'fs';\nimport path from 'path';\nimport {makeTempDir, NETWORK_FAMILY} from '@subql/common';\nimport {extractGitInfo, getChainIdByNetworkName, improveProjectInfo, prepareProject} from './migrate-controller';\nimport {TestSubgraph} from './migrate.fixtures';\n\nconst testProjectPath = '../../../test/migrate/testProject';\n\ndescribe('Migrate controller', () => {\n  it('should able to extract git info from given link', () => {\n    // git ssh should be same link\n    expect(extractGitInfo('git@github.com:subquery/poap-benchmark.git')).toStrictEqual({\n      link: 'git@github.com:subquery/poap-benchmark.git',\n      branch: undefined,\n    });\n    // git link can extract git link, if branch is not provide should be undefined, so it can use default branch\n    expect(extractGitInfo('https://github.com/subquery/poap-benchmark')).toStrictEqual({\n      link: 'https://github.com/subquery/poap-benchmark',\n      branch: undefined,\n    });\n    // can extract git branch\n    expect(extractGitInfo('https://github.com/subquery/poap-benchmark/tree/test-branch')).toStrictEqual({\n      link: 'https://github.com/subquery/poap-benchmark',\n      branch: 'test-branch',\n    });\n\n    // bitbucket ssh\n    expect(extractGitInfo('git@bitbucket.org:subquery/poap-benchmark.git')).toStrictEqual({\n      link: 'git@bitbucket.org:subquery/poap-benchmark.git',\n      branch: undefined,\n    });\n    // bitbucket link\n    expect(extractGitInfo('https://bitbucket.org/subquery/poap-benchmark/')).toStrictEqual({\n      link: 'https://bitbucket.org/subquery/poap-benchmark',\n      branch: undefined,\n    });\n    // can extract bitbucket branch\n    expect(extractGitInfo('https://bitbucket.org/subquery/poap-benchmark/src/test-branch')).toStrictEqual({\n      link: 'https://bitbucket.org/subquery/poap-benchmark',\n      branch: 'test-branch',\n    });\n\n    // should return result if user provide is a git subdirectory\n    expect(extractGitInfo('https://github.com/gprotocol/g-tooling/tree/main/examples/ethereum-gravatar')).toStrictEqual(\n      {\n        link: 'https://github.com/gprotocol/g-tooling',\n        branch: 'main',\n      }\n    );\n\n    // IF not valid, should return undefined\n    expect(extractGitInfo('https://google.com')).toBe(undefined);\n  });\n\n  it('should get chain id, getChainIdByNetworkName', () => {\n    expect(getChainIdByNetworkName(NETWORK_FAMILY.ethereum, 'mainnet')).toBe('1');\n    expect(() => getChainIdByNetworkName(NETWORK_FAMILY.ethereum, 'newnetwork')).toThrow();\n    // not support yet\n    expect(() => getChainIdByNetworkName(NETWORK_FAMILY.algorand, 'algorand')).toThrow();\n  });\n\n  it('prepareProject', async () => {\n    const subqlDir = await makeTempDir();\n    await prepareProject({chainId: '1', networkFamily: NETWORK_FAMILY.ethereum}, subqlDir);\n    expect(fs.existsSync(path.join(subqlDir, 'project.ts'))).toBeTruthy();\n    fs.rmSync(subqlDir, {recursive: true, force: true});\n\n    const subqlDir2 = await makeTempDir();\n    await expect(prepareProject({chainId: '2', networkFamily: NETWORK_FAMILY.ethereum}, subqlDir2)).rejects.toThrow();\n    fs.rmSync(subqlDir2, {recursive: true, force: true});\n  }, 100000);\n\n  it('improveProjectInfo', () => {\n    const testSubgraph = TestSubgraph;\n    expect(TestSubgraph.name).toBeUndefined();\n    improveProjectInfo(path.join(__dirname, testProjectPath), testSubgraph);\n    expect(TestSubgraph.name).toBe('poap-mainnet-subquery');\n    expect(TestSubgraph.repository).toBe('');\n  });\n});\n"]}