{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/controller/migrate/types.ts"],"names":[],"mappings":";AAAA,8DAA8D;AAC9D,mCAAmC","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {NETWORK_FAMILY} from '@subql/common';\nimport {DatasourceKind, TemplateKind} from '../codegen-controller';\nimport {ExampleProjectInterface} from '../init-controller';\n\nexport interface NetworkUtils {\n  dsConverter: DsConvertFunction;\n  templateConverter: TemplateConvertFunction;\n}\n\nexport interface NetworkExampleProject {\n  [key: string]: ExampleProjectInterface;\n}\n\nexport interface ChainInfo {\n  networkFamily: NETWORK_FAMILY;\n  chainId: string;\n}\n\nexport interface SubgraphTemplateSource {\n  abi: string;\n}\n\nexport interface SubgraphSource extends SubgraphTemplateSource {\n  address: string;\n  startBlock: number;\n  endBlock?: number;\n}\n\nexport interface SubgraphDataSourceBase {\n  kind: string;\n  name: string;\n  network: string;\n  mapping: SubgraphMapping;\n  context?: Record<string, {type: string; data: boolean | string}>;\n}\n\nexport interface SubgraphDataSource extends SubgraphDataSourceBase {\n  source: SubgraphSource;\n}\n\nexport interface SubgraphTemplate extends SubgraphDataSourceBase {\n  source: SubgraphTemplateSource;\n}\n\ninterface SubgraphMapping {\n  kind: string;\n  apiVersion: string;\n  language: string;\n  entities: string[];\n  abis: {name: string; file: string}[];\n  eventHandlers?: {event: string; handler: string}[];\n  callHandlers?: {function: string; handler: string}[];\n  blockHandlers?: {filter?: {kind: string}; handler: string}[]; //TODO, subql support this filter\n  file: string;\n}\n\nexport interface SubgraphProject {\n  features?: string[];\n  graft?: {base: string; block: number};\n  name?: string;\n  author?: string;\n  specVersion: string;\n  description: string;\n  repository: string;\n  schema: {\n    file: string;\n  };\n  dataSources: SubgraphDataSource[];\n  templates?: SubgraphTemplate[];\n}\n\ntype MigrateMappingType<T extends DatasourceKind | TemplateKind> = {\n  handlers: (T['mapping']['handlers'][number] & {migrateHandlerType: string})[];\n};\nexport type MigrateDatasourceKind<T extends DatasourceKind | TemplateKind = DatasourceKind> = T & {\n  migrateDatasourceType: string;\n  mapping: T['mapping'] & MigrateMappingType<T>;\n};\n\n// TODO, currently use DatasourceKind, which migrate network supported,should be a new type include all network dataSources\nexport type DsConvertFunction = (ds: SubgraphDataSource) => MigrateDatasourceKind;\nexport type TemplateConvertFunction = (ds: SubgraphTemplate) => MigrateDatasourceKind<TemplateKind>;\n"]}