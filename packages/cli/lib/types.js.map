{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":";AAAA,8DAA8D;AAC9D,mCAAmC;;AAyCnC,kDAEC;AAED,kDAEC;AAED,kDAEC;AAVD,SAAgB,mBAAmB,CAAC,WAA4B;IAC9D,OAAO,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;AAC3C,CAAC;AAED,SAAgB,mBAAmB,CAAC,WAA4B;IAC9D,OAAO,CAAC,CAAE,WAAiC,CAAC,WAAW,CAAC;AAC1D,CAAC;AAED,SAAgB,mBAAmB,CAAC,WAA4B;IAC9D,OAAO,CAAC,CAAE,WAAiC,CAAC,OAAO,CAAC;AACtD,CAAC","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {ProjectNetworkConfig, RunnerSpecs} from '@subql/types-core';\n\nexport interface ProjectSpecBase {\n  name: string;\n  author: string;\n  description?: string;\n  endpoint: ProjectNetworkConfig['endpoint'];\n}\n\nexport interface QueryAdvancedOpts {\n  unsafe?: boolean;\n  subscription?: boolean;\n  queryTimeout?: number;\n  maxConnection?: number;\n  queryLimit?: number;\n  aggregate?: boolean;\n}\nexport interface IndexerAdvancedOpts {\n  unsafe?: boolean;\n  batchSize?: number;\n  subscription?: boolean;\n  historicalData?: boolean;\n  unfinalizedBlocks?: boolean;\n  proofOfIndex?: boolean;\n  storeCacheThreshold?: number;\n  disableStoreCacheAsync?: boolean;\n}\n\nexport type ProjectSpecV0_0_1 = ProjectSpecBase;\n\nexport interface ProjectSpecV1_0_0 extends ProjectSpecBase {\n  chainId: string;\n  runner: RunnerSpecs;\n}\n\nexport interface ProjectSpecV0_2_0 extends ProjectSpecBase {\n  genesisHash: string;\n}\n\nexport function isProjectSpecV0_0_1(projectSpec: ProjectSpecBase): projectSpec is ProjectSpecV0_0_1 {\n  return !isProjectSpecV0_2_0(projectSpec);\n}\n\nexport function isProjectSpecV0_2_0(projectSpec: ProjectSpecBase): projectSpec is ProjectSpecV0_2_0 {\n  return !!(projectSpec as ProjectSpecV0_2_0).genesisHash;\n}\n\nexport function isProjectSpecV1_0_0(projectSpec: ProjectSpecBase): projectSpec is ProjectSpecV1_0_0 {\n  return !!(projectSpec as ProjectSpecV1_0_0).chainId;\n}\n\nexport interface ValidateDataType {\n  valid: boolean;\n  manifestFile: string | null;\n  chainId: string | null;\n  runner?: RunnerSpecs | null;\n  manifestRunner?: RunnerSpecs | null;\n  errorMessage?: string;\n}\n\nexport interface CreateProject {\n  key: string;\n  name: string;\n  subtitle?: string;\n  description?: string;\n  logoUrl?: string;\n  apiVersion: 'v2' | 'v3';\n  type: 1 | 2 | 3; // MS | NETWORK | SUBGRAPH\n  tag: string[];\n  hide?: boolean;\n  dedicateDBKey?: string;\n}\nexport interface DeploymentDataType {\n  projectKey: string;\n  version: string;\n  status: string;\n  indexerImage: string;\n  queryImage: string;\n  endpoint: string;\n  dictEndpoint: string;\n  type: string;\n  createdAt: string;\n  updatedAt: string;\n  id: number;\n  subFolder: string;\n  queryUrl: string;\n  configuration: {\n    config: {\n      query: Record<string, unknown>;\n      indexer: IndexerAdvancedOpts;\n      role: string;\n      chainId: string;\n    };\n  };\n}\n\nexport interface ProjectDataType {\n  createdAt: string;\n  updatedAt: string;\n  id: number;\n  projectKey: string;\n  version: string;\n  status: string;\n  cluster: string;\n  indexerImage: string;\n  queryImage: string;\n  subFolder: string;\n  endpoint: string;\n  dictEndpoint: string;\n  type: string;\n  queryUrl: string;\n  configuration: {\n    config: {\n      query: unknown;\n      indexer: unknown;\n    };\n  };\n  role: string;\n  chainId: string;\n  apiVersion: string;\n}\n\nexport type DeploymentType = 'primary' | 'stage';\n\nexport interface V3DeploymentInput {\n  cid: string;\n  type: DeploymentType;\n  queryImageVersion: string;\n  queryAdvancedSettings: {\n    query: QueryAdvancedOpts;\n  };\n  chains: V3DeploymentIndexerType[];\n}\n\nexport interface V3DeploymentIndexerType {\n  cid: string;\n  dictEndpoint?: string;\n  endpoint: string | string[];\n  indexerImageVersion: string;\n  indexerAdvancedSettings: {\n    indexer: IndexerAdvancedOpts;\n  };\n  extraParams?: {\n    workers?: {\n      num?: number;\n    };\n  };\n}\n\nexport interface MultichainDataFieldType {\n  [key: string]: string;\n}\n\nexport interface ProjectDeploymentInterface {\n  org: string;\n  projectName: string;\n  chains: V3DeploymentIndexerType[];\n  projectInfo?: ProjectDataType;\n  flags: DeploymentFlagsInterface;\n  ipfsCID: string;\n  queryVersion: string;\n  authToken: string;\n  log: any;\n}\n\nexport interface DeploymentFlagsInterface {\n  ipfs?: string;\n  org?: string;\n  projectName?: string;\n  type: DeploymentType;\n  indexerVersion?: string;\n  queryVersion?: string;\n  dict?: string;\n  endpoint?: string;\n  indexerUnsafe: boolean;\n  indexerBatchSize?: number;\n  indexerSubscription: boolean;\n  disableHistorical: boolean;\n  indexerUnfinalized: boolean;\n  indexerStoreCacheThreshold?: number;\n  disableIndexerStoreCacheAsync: boolean;\n  indexerWorkers?: number;\n  ipfsCID?: string;\n  location?: string;\n  queryUnsafe: boolean;\n  querySubscription: boolean;\n  queryTimeout?: number;\n  queryMaxConnection?: number;\n  queryAggregate: boolean;\n  queryLimit?: number;\n  useDefaults: boolean;\n}\n\nexport interface GenerateDeploymentChainInterface {\n  cid: string;\n  dictEndpoint?: string;\n  endpoint: string[];\n  indexerImageVersion: string;\n  flags: DeploymentFlagsInterface;\n}\n"]}