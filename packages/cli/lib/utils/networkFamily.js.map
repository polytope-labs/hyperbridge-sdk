{"version":3,"file":"networkFamily.js","sourceRoot":"","sources":["../../src/utils/networkFamily.ts"],"names":[],"mappings":";AAAA,8DAA8D;AAC9D,mCAAmC;;AAWnC,4CAKC;AAED,8DAOC;AAvBD,0CAA4D;AAE5D,MAAM,cAAc,GAAG,CAAC,GAAW,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAEnF,SAAS,SAAS,CAAC,OAAe;IAChC,OAAO,CAAC,CAAC,OAAO,IAAI,cAAc,CAAC,OAAO,CAAC,IAAI,uBAAc,CAAC;AAChE,CAAC;AAED,yCAAyC;AACzC,SAAgB,gBAAgB,CAAC,OAAe;IAC9C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC;QACxB,MAAM,IAAI,KAAK,CAAC,4CAA4C,OAAO,EAAE,CAAC,CAAC;IACzE,CAAC;IACD,OAAO,uBAAc,CAAC,cAAc,CAAC,OAAO,CAA2C,CAAC,CAAC;AAC3F,CAAC;AAED,SAAgB,yBAAyB,CAAC,aAA6B;IACrE,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,sBAAa,CAAC,EAAE,CAAC;QACzD,IAAI,KAAK,KAAK,aAAa,EAAE,CAAC;YAC5B,OAAO,GAAG,CAAC;QACb,CAAC;IACH,CAAC;IACD,MAAM,IAAI,KAAK,CAAC,uCAAuC,aAAa,EAAE,CAAC,CAAC;AAC1E,CAAC","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {NETWORK_FAMILY, runnerMapping} from '@subql/common';\n\nconst lowerCaseFirst = (str: string) => str.charAt(0).toLowerCase() + str.slice(1);\n\nfunction isNetwork(network: string): network is NETWORK_FAMILY {\n  return !!network && lowerCaseFirst(network) in NETWORK_FAMILY;\n}\n\n// can be either lowerCased or UpperCased\nexport function getNetworkFamily(network: string): NETWORK_FAMILY {\n  if (!isNetwork(network)) {\n    throw new Error(`Network not found or unsupported network ${network}`);\n  }\n  return NETWORK_FAMILY[lowerCaseFirst(network) as unknown as keyof typeof NETWORK_FAMILY];\n}\n\nexport function findRunnerByNetworkFamily(networkFamily: NETWORK_FAMILY): string {\n  for (const [key, value] of Object.entries(runnerMapping)) {\n    if (value === networkFamily) {\n      return key;\n    }\n  }\n  throw new Error(`Runner not found for network family ${networkFamily}`);\n}\n"]}