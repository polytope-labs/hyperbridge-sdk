{{> metadata}}
{{> network-config}}
dataSources:
  - kind: ethereum/Runtime
    startBlock: {{blockNumber}}
    options:
      abi: ethereumHost
      address: '{{config.contracts.ethereumHost}}'
    assets:
      ethereumHost:
        file: ./abis/EthereumHost.abi.json
      chainLinkAggregatorV3:
        file: ./abis/ChainLinkAggregatorV3.abi.json
    mapping:
      file: ./dist/index.js
      handlers:
      {{> handlers}}
  - kind: ethereum/Runtime
    startBlock: {{blockNumber}}
    options:
      abi: erc6160ext20
      address: '{{config.contracts.erc6160ext20}}'
    assets:
      erc6160ext20:
        file: ./abis/ERC6160Ext20.abi.json
    mapping:
      file: ./dist/index.js
      handlers:
        - handler: handleTransferEvent
          kind: ethereum/LogHandler
          filter:
            topics:
              - 'Transfer(address indexed from, address indexed to, uint256 amount)'
  {{#if config.contracts.intentGateway}}
  - kind: ethereum/Runtime
    startBlock: {{blockNumber}}
    options:
      abi: intentGateway
      address: '{{config.contracts.intentGateway}}'
    assets:
      intentGateway:
        file: ./abis/IntentGateway.abi.json
    mapping:
      file: ./dist/index.js
      handlers:
        - kind: ethereum/LogHandler
          handler: handleOrderPlacedEvent
          filter:
            topics:
              - 'OrderPlaced(bytes32,bytes,bytes,uint256,uint256,uint256,(bytes32,uint256,bytes32)[],(bytes32,uint256)[],bytes)'
        - kind: ethereum/LogHandler
          handler: handleOrderFilledEvent
          filter:
            topics:
              - 'OrderFilled(bytes32,address)'
        - kind: ethereum/LogHandler
          handler: handleEscrowReleasedEvent
          filter:
            topics:
              - 'EscrowReleased(bytes32)'
        - kind: ethereum/LogHandler
          handler: handleEscrowRefundedEvent
          filter:
            topics:
              - 'EscrowRefunded(bytes32)'
  {{/if}}
  {{#if config.contracts.tokenGateway}}
  - kind: ethereum/Runtime
    startBlock: {{blockNumber}}
    options:
      abi: tokenGateway
      address: '{{config.contracts.tokenGateway}}'
    assets:
      tokenGateway:
        file: ./abis/TokenGateway.abi.json
    mapping:
      file: ./dist/index.js
      handlers:
        - kind: ethereum/LogHandler
          handler: handleAssetTeleportedEvent
          filter:
            topics:
              - 'AssetTeleported(bytes32,string,uint256,bytes32,address,bytes32,bool)'
        - kind: ethereum/LogHandler
          handler: handleAssetReceivedEvent
          filter:
            topics:
              - 'AssetReceived(uint256,bytes32,bytes32,address,bytes32)'
        - kind: ethereum/LogHandler
          handler: handleAssetRefundedEvent
          filter:
            topics:
              - 'AssetRefunded(uint256,bytes32,address,bytes32)'
  {{/if}}
  - kind: ethereum/Runtime
    startBlock: {{blockNumber}}
    options:
      abi: handlerV1
      address: '0x6C84eDd2A018b1fe2Fc93a56066B5C60dA4E6D64'
    assets:
      handlerV1:
        file: ./abis/HandlerV1.abi.json
    mapping:
      file: ./dist/index.js
      handlers:
        - handler: handlePostRequestTransactionHandler
          kind: ethereum/TransactionHandler
          function: >-
            handlePostRequests(address,(((uint256,uint256),bytes32[],uint256),((bytes,bytes,uint64,bytes,bytes,uint64,bytes),uint256,uint256)[]))
        - handler: handlePostResponseTransactionHandler
          kind: ethereum/TransactionHandler
          function: >-
            handlePostResponses(address,(((uint256,uint256),bytes32[],uint256),(((bytes,bytes,uint64,bytes,bytes,uint64,bytes),bytes,uint64),uint256,uint256)[]))

repository: 'https://github.com/polytope-labs/hyperbridge'
